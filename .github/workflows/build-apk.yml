name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x android_app/gradlew
      
    - name: Build debug APK
      run: |
        cd android_app
        ./gradlew assembleDebug
        
    - name: Build release APK
      run: |
        cd android_app
        ./gradlew assembleRelease
        
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: mushroom-tech-debug
        path: android_app/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: mushroom-tech-release
        path: android_app/app/build/outputs/apk/release/app-release-unsigned.apk
        
    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          üçÑ **Mushroom Tech App - Automated Build**
          
          üì± **APK Files:**
          - `app-debug.apk` - Debug version (recommended for testing)
          - `app-release-unsigned.apk` - Release version (production)
          
          üîß **Features:**
          - Firebase cloud monitoring
          - Gemini AI mushroom analysis
          - Real-time environmental control
          - ESP32 & Raspberry Pi integration
          
          üì• **Installation:**
          1. Download `app-debug.apk`
          2. Enable "Unknown Sources" in Android settings
          3. Install the APK
          
          Built automatically from commit: ${{ github.sha }}
        files: |
          android_app/app/build/outputs/apk/debug/app-debug.apk
          android_app/app/build/outputs/apk/release/app-release-unsigned.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 